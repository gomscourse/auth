syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/gomscourse/auth/pkg/user_v1;user_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "User API"
    version: "1.0.0"
    contact: {
      name: "Miroslav Toykin"
      email: "miroslavtoykin@gmail.com"
    };
  };

  host: "localhost:8091",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service UserV1 {
  // Создать пользователя
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/user/v1",
      body: "*"
    };
  };

  // Получить пользователя по ID
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/user/v1"
    };
  };

  // Обновить пользователя
  rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/user/v1",
      body: "*"
    };
  };

  // Удалить пользователя
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/user/v1",
    };
  };
}

enum Role {
  USER = 0;
  ADMIN = 1;
}

message UserCreateInfo {
  string name = 1 [(validate.rules).string = {min_len: 3, max_len: 50}];
  string email = 2 [(validate.rules).string.email = true];
  string password = 3;
  string password_confirm = 4;
  Role role = 5;
}

message User {
  int64 id = 1;
  string name = 2;
  string email = 3;
  Role role = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message UpdateUserInfo {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue email = 2;
}

message CreateRequest {
  UserCreateInfo info = 1;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1;
}

message GetResponse {
  User user = 1;
}

message UpdateRequest {
  int64 id = 1;
  UpdateUserInfo info = 2;
}

message DeleteRequest {
  int64 id = 1;
}



